import Head from 'next/head';
import Link from 'next/link';

import { useRouter } from 'next/router';
export default function Home({ host, time, slug }) {
  const router = useRouter();

  // Host available on query from router if blocking or fallback
  const query = router.query;

  // Or params
  console.log(host, time, query);

  return (
    <div>
      <Head>
        <title>Next Multi Host Test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <Link href={host.includes('localhost') ? 'http://localhost:3000/' : 'https://next-multi-host.vercel.app/'}>Host 1</Link>
        {' - '}
        <Link href={host.includes('localhost') ? 'http://another.localhost:3000/' : 'https://next-multi-host-acorcutt.vercel.app/'}>Host 2</Link>
      </div>
      <h1>
        Host: <i>{host}</i>
      </h1>
      <p>
        Path: <i>/{slug}</i> {' - '}
        Generated At: <i>{time}</i>
      </p>
      <div>
        <Link href="/">Home</Link> - <Link href="/posts/a">Static Built A</Link> - <Link href="/posts/b">Not Static B</Link>
      </div>
    </div>
  );
}

export async function getStaticProps(context) {
  // Available on server render
  console.log('getStaticProps', context);

  const host = context.params.host;
  const slug = (context.params.slug || []).join('/');
  const time = Date.now();
  return {
    props: {
      host,
      slug,
      time,
    },
    revalidate: 10,
  };
}

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: 'blocking',
  };
}
